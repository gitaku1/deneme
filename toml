import os
import nbformat
from nbconvert import HTMLExporter
from weasyprint import HTML
from bs4 import BeautifulSoup

# Dosya yolları
IPYNB_PATH = "/veri01/ipynbdirectory/notebook.ipynb"
PDF_OUTPUT_PATH = "/veri01/ipynbdirectory/notebook.pdf"

# Sayfa yapısı ve stiller (landscape + tablo optimizasyonu)
BASE_CSS = """
<style>
@page {
    size: A4 landscape;
    margin: 1cm;
}
body {
    font-family: "DejaVu Sans", sans-serif;
    font-size: 9pt;
}
pre, code {
    font-size: 8pt !important;
    white-space: pre-wrap !important;
    word-wrap: break-word;
}
.output_area pre, .output_area div {
    white-space: pre-wrap !important;
    word-break: break-word !important;
    overflow-x: auto !important;
}
.output_scroll {
    overflow-x: auto !important;
    max-height: none !important;
}
.output_wrapper, .output {
    page-break-inside: avoid !important;
}

/* Tabloları sığdırmak için özel stil */
table {
    width: 100% !important;
    table-layout: auto !important;
    word-wrap: break-word !important;
    font-size: 7pt;
    overflow-x: auto !important;
    display: block;
}
td, th {
    padding: 3px !important;
    text-overflow: clip !important;
    overflow-wrap: break-word !important;
}
</style>
"""

# Çok uzun output'lar için özel stil
LONG_OUTPUT_STYLE = 'font-size:6pt; line-height:1.1em;'
LONG_OUTPUT_CHAR_LIMIT = 5000

def convert_ipynb_to_pdf():
    print("📘 Notebook okunuyor...")
    with open(IPYNB_PATH, "r", encoding="utf-8") as f:
        nb = nbformat.read(f, as_version=4)

    print("💻 HTML'e dönüştürülüyor...")
    html_exporter = HTMLExporter()
    html_exporter.exclude_input_prompt = True
    html_exporter.exclude_output_prompt = True
    body, _ = html_exporter.from_notebook_node(nb)

    print("🔍 HTML içinde çıktı uzunlukları analiz ediliyor...")
    soup = BeautifulSoup(body, "html.parser")
    outputs = soup.find_all("div", class_="output_area")

    for output in outputs:
        text = output.get_text()
        if len(text) > LONG_OUTPUT_CHAR_LIMIT:
            for tag in output.find_all(["pre", "code", "div"]):
                tag['style'] = tag.get('style', '') + LONG_OUTPUT_STYLE

    # Tüm tablo ve code-block’ların genişlik taşmalarını engelle
    for table in soup.find_all("table"):
        table['style'] = table.get('style', '') + 'width:100%; display:block; overflow-x:auto;'

    full_html = BASE_CSS + str(soup)

    print("📄 PDF oluşturuluyor (landscape)...")
    HTML(string=full_html).write_pdf(PDF_OUTPUT_PATH)
    print(f"✅ PDF başarıyla oluşturuldu: {PDF_OUTPUT_PATH}")

convert_ipynb_to_pdf()
